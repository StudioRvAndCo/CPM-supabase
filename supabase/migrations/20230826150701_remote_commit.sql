
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."project_type" AS ENUM (
    'Unknown',
    'Movie',
    'Series'
);

ALTER TYPE "public"."project_type" OWNER TO "postgres";

CREATE TYPE "public"."project_type_enum" AS ENUM (
    'Unknown',
    'Movie',
    'Series'
);

ALTER TYPE "public"."project_type_enum" OWNER TO "postgres";

CREATE FUNCTION "public"."shots_completed"("project_id" bigint) RETURNS smallint
    LANGUAGE "sql"
    AS $$select
  count(*)
from
  shot
where
  sequence in (
    select
      id
    from
      sequence
    where
      episode in (
        select
          id
        from
          episode
        where
          project = project_id
      )
  )
  and completed = true$$;

ALTER FUNCTION "public"."shots_completed"("project_id" bigint) OWNER TO "postgres";

CREATE FUNCTION "public"."shots_total"("project_id" bigint) RETURNS smallint
    LANGUAGE "sql"
    AS $$select
  count(*)
from
  shot
where
  sequence in (
    select
      id
    from
      sequence
    where
      episode in (
        select
          id
        from
          episode
        where
          project = project_id
      )
  )$$;

ALTER FUNCTION "public"."shots_total"("project_id" bigint) OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE "public"."link" (
    "id" bigint NOT NULL,
    "label" "text" DEFAULT ''::"text",
    "url" "text" DEFAULT ''::"text",
    "project" bigint NOT NULL,
    "index" smallint NOT NULL
);

ALTER TABLE "public"."link" OWNER TO "postgres";

ALTER TABLE "public"."link" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Link_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."episode" (
    "id" bigint NOT NULL,
    "project" bigint NOT NULL,
    "title" "text" DEFAULT ''::"text",
    "description" "text" DEFAULT ''::"text",
    "director" "text" DEFAULT ''::"text",
    "writer" "text" DEFAULT ''::"text",
    "index" smallint NOT NULL
);

ALTER TABLE "public"."episode" OWNER TO "postgres";

ALTER TABLE "public"."episode" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."episode_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."location" (
    "id" bigint NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "position" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."location" OWNER TO "postgres";

ALTER TABLE "public"."location" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."location_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."member" (
    "id" bigint NOT NULL,
    "first_name" "text" DEFAULT ''::"text",
    "last_name" "text" DEFAULT ''::"text",
    "phone" "text" DEFAULT ''::"text",
    "email" "text" DEFAULT ''::"text"
);

ALTER TABLE "public"."member" OWNER TO "postgres";

ALTER TABLE "public"."member" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."member_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."project" (
    "id" bigint NOT NULL,
    "title" "text" DEFAULT ''::"text",
    "description" "text" DEFAULT ''::"text",
    "start_date" "date" DEFAULT "now"(),
    "end_date" "date" DEFAULT "now"(),
    "director" "text" DEFAULT ''::"text",
    "writer" "text" DEFAULT ''::"text",
    "project_type" "public"."project_type" DEFAULT 'Unknown'::"public"."project_type" NOT NULL
);

ALTER TABLE "public"."project" OWNER TO "postgres";

ALTER TABLE "public"."project" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."project_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."sequence" (
    "id" bigint NOT NULL,
    "episode" bigint NOT NULL,
    "title" "text" DEFAULT ''::"text",
    "description" "text" DEFAULT ''::"text",
    "start_date" timestamp with time zone,
    "end_date" timestamp with time zone,
    "index" smallint NOT NULL
);

ALTER TABLE "public"."sequence" OWNER TO "postgres";

ALTER TABLE "public"."sequence" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."sequence_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."sequence_location" (
    "id" bigint NOT NULL,
    "sequence" bigint NOT NULL,
    "location" bigint NOT NULL
);

ALTER TABLE "public"."sequence_location" OWNER TO "postgres";

ALTER TABLE "public"."sequence_location" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."sequence_location_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."shot" (
    "id" bigint NOT NULL,
    "sequence" bigint NOT NULL,
    "index" smallint NOT NULL,
    "description" "text" DEFAULT ''::"text",
    "value" "text" DEFAULT ''::"text",
    "completed" boolean DEFAULT false
);

ALTER TABLE "public"."shot" OWNER TO "postgres";

ALTER TABLE "public"."shot" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."shot_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."link"
    ADD CONSTRAINT "Link_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."episode"
    ADD CONSTRAINT "episode_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."link"
    ADD CONSTRAINT "link_index_key" UNIQUE ("index");

ALTER TABLE ONLY "public"."location"
    ADD CONSTRAINT "location_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."member"
    ADD CONSTRAINT "member_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."project"
    ADD CONSTRAINT "project_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."sequence_location"
    ADD CONSTRAINT "sequence_location_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."sequence"
    ADD CONSTRAINT "sequence_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."shot"
    ADD CONSTRAINT "shot_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."episode"
    ADD CONSTRAINT "episode_project_fkey" FOREIGN KEY ("project") REFERENCES "public"."project"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."link"
    ADD CONSTRAINT "link_project_fkey" FOREIGN KEY ("project") REFERENCES "public"."project"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."sequence"
    ADD CONSTRAINT "sequence_episode_fkey" FOREIGN KEY ("episode") REFERENCES "public"."episode"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."sequence_location"
    ADD CONSTRAINT "sequence_location_location_fkey" FOREIGN KEY ("location") REFERENCES "public"."location"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."sequence_location"
    ADD CONSTRAINT "sequence_location_sequence_fkey" FOREIGN KEY ("sequence") REFERENCES "public"."sequence"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."shot"
    ADD CONSTRAINT "shot_sequence_fkey" FOREIGN KEY ("sequence") REFERENCES "public"."sequence"("id") ON DELETE CASCADE;

CREATE POLICY "Authenticated | All" ON "public"."episode" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."link" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."location" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."member" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."project" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."sequence" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."sequence_location" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Authenticated | All" ON "public"."shot" TO "authenticated" USING (true) WITH CHECK (true);

ALTER TABLE "public"."episode" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."link" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."location" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."member" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."project" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."sequence" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."sequence_location" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."shot" ENABLE ROW LEVEL SECURITY;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."shots_completed"("project_id" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."shots_completed"("project_id" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."shots_completed"("project_id" bigint) TO "service_role";

GRANT ALL ON FUNCTION "public"."shots_total"("project_id" bigint) TO "anon";
GRANT ALL ON FUNCTION "public"."shots_total"("project_id" bigint) TO "authenticated";
GRANT ALL ON FUNCTION "public"."shots_total"("project_id" bigint) TO "service_role";

GRANT ALL ON TABLE "public"."link" TO "anon";
GRANT ALL ON TABLE "public"."link" TO "authenticated";
GRANT ALL ON TABLE "public"."link" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Link_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Link_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Link_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."episode" TO "anon";
GRANT ALL ON TABLE "public"."episode" TO "authenticated";
GRANT ALL ON TABLE "public"."episode" TO "service_role";

GRANT ALL ON SEQUENCE "public"."episode_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."episode_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."episode_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."location" TO "anon";
GRANT ALL ON TABLE "public"."location" TO "authenticated";
GRANT ALL ON TABLE "public"."location" TO "service_role";

GRANT ALL ON SEQUENCE "public"."location_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."location_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."location_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."member" TO "anon";
GRANT ALL ON TABLE "public"."member" TO "authenticated";
GRANT ALL ON TABLE "public"."member" TO "service_role";

GRANT ALL ON SEQUENCE "public"."member_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."member_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."member_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."project" TO "anon";
GRANT ALL ON TABLE "public"."project" TO "authenticated";
GRANT ALL ON TABLE "public"."project" TO "service_role";

GRANT ALL ON SEQUENCE "public"."project_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."project_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."project_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."sequence" TO "anon";
GRANT ALL ON TABLE "public"."sequence" TO "authenticated";
GRANT ALL ON TABLE "public"."sequence" TO "service_role";

GRANT ALL ON SEQUENCE "public"."sequence_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."sequence_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."sequence_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."sequence_location" TO "anon";
GRANT ALL ON TABLE "public"."sequence_location" TO "authenticated";
GRANT ALL ON TABLE "public"."sequence_location" TO "service_role";

GRANT ALL ON SEQUENCE "public"."sequence_location_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."sequence_location_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."sequence_location_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."shot" TO "anon";
GRANT ALL ON TABLE "public"."shot" TO "authenticated";
GRANT ALL ON TABLE "public"."shot" TO "service_role";

GRANT ALL ON SEQUENCE "public"."shot_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."shot_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."shot_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
